---
import "../styling/style.css";
import "../styling/reset.css";

import Header from "@blocks/Header.astro";
import Footer from "@blocks/Footer.astro";
import TimeWasted from "@lib/blocks/TimeWasted.svelte";

export interface Props {
	title: string;
	showHeader?: boolean;
	showFooter?: boolean;
}

const { title, showFooter = true, showHeader = true } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div id="hire-me" class="box invert">
			<div class="cluster" data-justify="center" data-wrap="nowrap">
				<img class="emote" src="/emote.gif" alt="" />
				<p>
					I'm currently open for internships and freelance positions for summer 2024.
					<br />
					<a href="mailto:alexis@alexis.lol">Contact me</a>.
				</p>
			</div>
		</div>
		<br />
		{showHeader && <Header />}
		<!-- <span class="circle"></span> -->
		<main class="stack gap:1">
			<div class="hero-container">
				<img class="hero-img rounded:lg" src="/hero.gif" alt="" />
				<div class="socials box no-hover stack">
					<a href="https://github.com/aelxxs" target="_blank">
						<svg xmlns="http://www.w3.org/2000/svg" class="ionicon" viewBox="0 0 480 512">
							<path
								d="M186.1 328.7c0 20.9-10.9 55.1-36.7 55.1s-36.7-34.2-36.7-55.1 10.9-55.1 36.7-55.1 36.7 34.2 36.7 55.1zM480 278.2c0 31.9-3.2 65.7-17.5 95-37.9 76.6-142.1 74.8-216.7 74.8-75.8 0-186.2 2.7-225.6-74.8-14.6-29-20.2-63.1-20.2-95 0-41.9 13.9-81.5 41.5-113.6-5.2-15.8-7.7-32.4-7.7-48.8 0-21.5 4.9-32.3 14.6-51.8 45.3 0 74.3 9 108.8 36 29-6.9 58.8-10 88.7-10 27 0 54.2 2.9 80.4 9.2 34-26.7 63-35.2 107.8-35.2 9.8 19.5 14.6 30.3 14.6 51.8 0 16.4-2.6 32.7-7.7 48.2 27.5 32.4 39 72.3 39 114.2zm-64.3 50.5c0-43.9-26.7-82.6-73.5-82.6-18.9 0-37 3.4-56 6-14.9 2.3-29.8 3.2-45.1 3.2-15.2 0-30.1-.9-45.1-3.2-18.7-2.6-37-6-56-6-46.8 0-73.5 38.7-73.5 82.6 0 87.8 80.4 101.3 150.4 101.3h48.2c70.3 0 150.6-13.4 150.6-101.3zm-82.6-55.1c-25.8 0-36.7 34.2-36.7 55.1s10.9 55.1 36.7 55.1 36.7-34.2 36.7-55.1-10.9-55.1-36.7-55.1z"
							>
							</path>
						</svg>
					</a>
					<a href="https://linkedin.com/in/aelxxs" target="_blank">
						<svg xmlns="http://www.w3.org/2000/svg" class="ionicon" viewBox="0 0 512 512">
							<path
								d="M444.17 32H70.28C49.85 32 32 46.7 32 66.89v374.72C32 461.91 49.85 480 70.28 480h373.78c20.54 0 35.94-18.21 35.94-38.39V66.89C480.12 46.7 464.6 32 444.17 32zm-273.3 373.43h-64.18V205.88h64.18zM141 175.54h-.46c-20.54 0-33.84-15.29-33.84-34.43 0-19.49 13.65-34.42 34.65-34.42s33.85 14.82 34.31 34.42c-.01 19.14-13.31 34.43-34.66 34.43zm264.43 229.89h-64.18V296.32c0-26.14-9.34-44-32.56-44-17.74 0-28.24 12-32.91 23.69-1.75 4.2-2.22 9.92-2.22 15.76v113.66h-64.18V205.88h64.18v27.77c9.34-13.3 23.93-32.44 57.88-32.44 42.13 0 74 27.77 74 87.64z"
							></path>
						</svg>
					</a>
					<a href="https://instagram.com/aelxxs" target="_blank">
						<svg xmlns="http://www.w3.org/2000/svg" class="ionicon" viewBox="0 0 512 512">
							<path
								d="M349.33 69.33a93.62 93.62 0 0193.34 93.34v186.66a93.62 93.62 0 01-93.34 93.34H162.67a93.62 93.62 0 01-93.34-93.34V162.67a93.62 93.62 0 0193.34-93.34h186.66m0-37.33H162.67C90.8 32 32 90.8 32 162.67v186.66C32 421.2 90.8 480 162.67 480h186.66C421.2 480 480 421.2 480 349.33V162.67C480 90.8 421.2 32 349.33 32z"
							></path>
							<path
								d="M377.33 162.67a28 28 0 1128-28 27.94 27.94 0 01-28 28zM256 181.33A74.67 74.67 0 11181.33 256 74.75 74.75 0 01256 181.33m0-37.33a112 112 0 10112 112 112 112 0 00-112-112z"
							></path>
						</svg>
					</a>
				</div>
			</div>
			<br />
			<div class="stack gap:0">
				<h1>{title}</h1>
				<slot name="title" />
			</div>
			<slot />
		</main>
		{showFooter && <Footer />}

		<TimeWasted client:load />
		<style>
			.ionicon {
				display: block;
				width: 1.25rem;
				height: 1.25rem;
				fill: var(--txt-1);
				transition: transform 0.2s ease-in-out;
			}

			.ionicon:hover,
			.ionicon:focus {
				transform: scale(1.2) rotate(5deg);
			}

			.corner-container {
				position: fixed;
				bottom: 0;
				right: 0;
				z-index: -1;
			}

			.corner {
				width: 3rem;
				position: fixed;
				bottom: -0.25rem;
				right: -0.25rem;
			}

			body {
				max-width: 58rem;
				padding: 1rem 1.25rem;
				margin-inline: auto;
			}

			main {
				padding: 1.25rem 2.25rem;
				margin-inline: auto;
				margin-block: 1rem;
			}

			.emote {
				width: 3.5rem;
				height: 3.5rem;
			}

			.hero-container {
				position: relative;
				z-index: 0;
			}

			.socials {
				border-radius: 0.6rem;
				padding: 0.65rem 0.5rem;
				position: absolute;
				bottom: -0.75rem;
				right: -0.75rem;
				z-index: 2;
			}

			.hero-img {
				display: block;
				width: 100%;
				height: 15rem;
				object-fit: cover;
				z-index: -11;
			}

			@media (max-width: 768px) {
				main {
					padding: 1.25rem 0.75rem;
				}

				.hero-img {
					height: 10rem;
				}
			}

			.circle {
				position: fixed;
				inset: 0;
				pointer-events: none;
				z-index: -2;
			}

			.circle::before {
				filter: blur(5rem);
				content: "";
				display: block;
				width: 35rem;
				height: 35rem;
				border-radius: 50%;
				opacity: 0.5;
				background: radial-gradient(circle, #006e7b, var(--bg-mute), transparent);
				transform: translate(-50%, -50%);
			}
		</style>

		<script>
			let inputX = 0;
			let inputY = 0;
			let posX = 0;
			let posY = 0;
			let alpha = 1;

			const circle = document.querySelector<HTMLSpanElement>(".circle");

			if (circle !== null) {
				addEventListener("mousemove", (event) => {
					inputX = event.clientX;
					inputY = event.clientY;

					alpha = 25;
				});

				addEventListener("touchmove", (event) => {
					if (event.touches.length > 0) {
						event.preventDefault();

						inputX = event.touches[0].clientX;
						inputY = event.touches[0].clientY;
					}

					alpha = 25;
				});

				let prev = 0;

				requestAnimationFrame(function render(now) {
					requestAnimationFrame(render);

					const factor = (now - prev) / 16;
					prev = now;

					const speed = 0.125;

					posX += factor * speed * (inputX - posX);
					posY += factor * speed * (inputY - posY);

					alpha *= Math.pow(0.95, factor);
					const opacity = Math.min(1, alpha);

					circle.style.transform = `translate3d(${~~posX}px, ${~~posY}px, 0)`;
					circle.style.opacity = (Math.round(opacity * 255) / 255).toString();
				});
			}
		</script>
	</body>
</html>
