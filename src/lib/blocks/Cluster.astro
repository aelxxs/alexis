---
import type { HTMLTag, Polymorphic } from "astro/types";

type SpaceString = `${number | string}${"px" | "em" | "rem" | "ch" | "vw" | "vh" | "vmin" | "vmax" | "%"}`;

type Props<Tag extends HTMLTag> = Polymorphic<{
	as: Tag;
	wrap?: "nowrap" | "wrap" | "wrap-reverse";
	justify?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly";
	align?: "flex-start" | "flex-end" | "center" | "baseline" | "stretch";
	space?: SpaceString;
}>;

const {
	as: Tag = "div",
	wrap = "wrap",
	justify = "space-between",
	align = "center",
	space = "var(--s0)",
	class: className,
	...props
} = Astro.props;
---

<Tag
	{...props}
	class={`cluster ${className}`}
	style={{
		"--wrap": wrap,
		"--justify": justify,
		"--align": align,
		"--space": space,
	}}
>
	<slot />
</Tag>

<style>
	.cluster {
		display: flex;
		flex-wrap: var(--wrap, wrap);
		justify-content: var(--justify, space-between);
		align-items: var(--align, center);
		gap: var(--space, var(--s0));
	}
</style>
