---
type Props = {
	name: string;
	description: string;
	stargazerCount: number;
	forkCount: number;
	primaryLanguage: {
		name: string;
		color: string;
	};
	pushedAt: string;
	url: string;
};

const { name, description, primaryLanguage, url } = Astro.props;
---

<a href={url} target="_blank" class="box stack" style="--space: 0.65rem;">
	<div class="repel">
		<p><strong>{name}</strong></p>
		<svg xmlns="http://www.w3.org/2000/svg" class="ionicon" viewBox="0 0 512 512"
			><path
				d="M384 224v184a40 40 0 01-40 40H104a40 40 0 01-40-40V168a40 40 0 0140-40h167.48M336 64h112v112M224 288L440 72"
				fill="none"
				stroke-linecap="round"
				stroke-linejoin="round"
				stroke-width="50"></path></svg
		>
	</div>
	<p id="desc txt:mute">{description}</p>
	<div class="cluster">
		<span
			class="language"
			style={{
				"--language-color": primaryLanguage?.color,
			}}></span>
		<small>{primaryLanguage?.name}</small>
	</div>
</a>

<style>
	a {
		display: block;
		text-decoration: none;
	}

	.language {
		width: 0.65rem;
		height: 0.65rem;
		background-color: var(--language-color, red);
		border-radius: 50%;
	}

	.ionicon {
		width: 0.9rem;
		height: 0.9rem;
		stroke: var(--txt-1);
		transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
	}

	.box:hover .ionicon {
		transform: translate(0.1rem, -0.1rem);
	}
</style>
